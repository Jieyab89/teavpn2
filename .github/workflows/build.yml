name: Build Linux

on:
  # Trigger the workflow on push or pull requests.
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        include:
          - cc: gcc
            cxx: g++
          - cc: clang
            cxx: clang++

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Install Toolchains
      run: sudo apt-get install -y git gcc g++ clang libc6-dev-i386 gcc-multilib g++-multilib make;

    - name: Display compiler versions
      run: |
        ${{matrix.cc}} --version;
        ${{matrix.cxx}} --version;

    - name: Build (Debug Mode)
      run: |
        make -j$(nproc) clean;
        make -j$(nproc) V=1 BAN_WARN=1 CC=${{matrix.cc}} CXX=${{matrix.cxx}};

    - name: Build (Release Mode)
      run: |
        make -j$(nproc) clean;
        make -j$(nproc) V=1 BAN_WARN=1 CC=${{matrix.cc}} CXX=${{matrix.cxx}} RELEASE_MODE=1;

    - name: Build (Release Mode with LTO)
      run: |
        make -j$(nproc) clean;
        make -j$(nproc) V=1 BAN_WARN=1 CC=${{matrix.cc}} CXX=${{matrix.cxx}} RELEASE_MODE=1 LTO=1;

    - name: Build (Debug Mode) (32 bit)
      run: |
        make -j$(nproc) clean;
        make -j$(nproc) V=1 BAN_WARN=1 CC=${{matrix.cc}} CXX=${{matrix.cxx}} CFLAGS=-m32;

    - name: Build (Release Mode) (32 bit)
      run: |
        make -j$(nproc) clean;
        make -j$(nproc) V=1 BAN_WARN=1 CC=${{matrix.cc}} CXX=${{matrix.cxx}} CFLAGS=-m32 RELEASE_MODE=1;

    - name: Build (Release Mode with LTO) (32 bit)
      run: |
        make -j$(nproc) clean;
        make -j$(nproc) V=1 BAN_WARN=1 CC=${{matrix.cc}} CXX=${{matrix.cxx}} CFLAGS=-m32 RELEASE_MODE=1 LTO=1;

    - name: Store GCC artifact
      uses: actions/upload-artifact@v2
      with:
        name: teavpn2
        path: teavpn2
